第一种
	关于类型的关键字, 主要包括 host, net, port, 例如 host 210.27.48.2, 指明 210.27.48.2 是一台主机,
	net 202.0.0.0 指明 202.0.0.0 是一个网络地址, port 23 指明端口号是 23. 如果没有指定类型, 缺省的类型是 host.
第二种
	确定传输方向的关键字, 主要包括src , dst ,dst or src, dst and src ,这些关键字指明了传输的方向.
	举例说明, src 210.27.48.2, 指明 ip 包中源地址是 210.27.48.2 , dst net 202.0.0.0 指明目的网络地址是 202.0.0.0.
	如果没有指明方向关键字, 则缺省是 src or dst 关键字。
第三种
	协议的关键字, 主要包括 fddi, ip, arp, rarp, tcp, udp 等类型. Fddi 指明是在 FDDI(分布式光纤数据接口网络)上的特定的网络协议, 
	实际上它是 "ether" 的别名, fddi 和 ether 具有类似的源地址和目的地址, 所以可以将 fddi 协议包当作 ether 的包进行处理和分析.
	其他的几个关键字就是指明了监听的包的协议内容。如果没有指定任何协议, 则 tcpdump 将会监听所有协议的信息包.

除了这三种类型的关键字之外, 其他重要的关键字如：gateway, broadcast, less, greater;
三种逻辑运算, 取非运算 'not' '!', 与运算 'and', '&&'; 或运算 'or', '││'; 这些关键字可以组合起来构成强大的组合条件来满足需要.

普通情况下, 直接启动 tcpdump 将监视第一个网络界面上所有流过的数据包。
# tcpdump
tcpdump: listening on fxp0
11:58:47.873028 202.102.245.40.netbios-ns > 202.102.245.127.netbios-ns: udp 50
11:58:47.974331 0:10:7b:8:3a:56 > 1:80:c2:0:0:0 802.1d ui/C len=43
                       0000 0000 0080 0000 1007 cf08 0900 0000
                       0e80 0000 902b 4695 0980 8701 0014 0002
                       000f 0000 902b 4695 0008 00
11:58:48.373134 0:0:e8:5b:6d:85 > Broadcast sap e0 ui/C len=97
                       ffff 0060 0004 ffff ffff ffff ffff ffff
                       0452 ffff ffff 0000 e85b 6d85 4008 0002
                       0640 4d41 5354 4552 5f57 4542 0000 0000
                       0000 00

A 想要截获所有 210.27.48.1 的主机收到的和发出的所有的数据包：
# tcpdump host 210.27.48.1 

B 想要截获主机 210.27.48.1 和主机 210.27.48.2 或 210.27.48.3 的通信, 
使用命令：(在命令行中适用括号时, 一定要 # tcpdump host 210.27.48.1 and \ (210.27.48.2 or 210.27.48.3 \)

C 如果想要获取主机 210.27.48.1 除了和主机 210.27.48.2 之外所有主机通信的 ip 包, 使用命令：
# tcpdump ip host 210.27.48.1 and !210.27.48.2

D 如果想要获取主机 210.27.48.1 接收或发出的 telnet 包, 使用如下命令：
# tcpdump tcp port 23 host 210.27.48.1

E 对本机的 udp 123 端口进行监视 123 为 ntp 的服务端口
# tcpdump udp port 123 

F 系统将只对名为 hostname 的主机的通信数据包进行监视。主机名可以是本地主机, 也可以是网络上的任何一台计算机。下面的命令可以读取主机 hostname 发送的所有数据： 
# tcpdump -i eth0 src host hostname

G 下面的命令可以监视所有送到主机 hostname 的数据包： 
# tcpdump -i eth0 dst host hostname

H 还可以监视通过指定网关的数据包： 
# tcpdump -i eth0 gateway Gatewayname

I 如果你还想监视编址到指定端口的 TCP 或 UDP 数据包, 那么执行以下命令： 
# tcpdump -i eth0 host hostname and port 80

J 如果想要获取主机 210.27.48.1 除了和主机 210.27.48.2 之外所有主机通信的 ip 包, 使用命令：
# tcpdump ip host 210.27.48.1 and ! 210.27.48.2

K 想要截获主机 210.27.48.1 和主机 210.27.48.2 或 210.27.48.3 的通信, 使用命令：(在命令行中适用　括号时, 一定要
# tcpdump host 210.27.48.1 and \ (210.27.48.2 or 210.27.48.3 \)

L 如果想要获取主机 210.27.48.1 除了和主机 210.27.48.2 之外所有主机通信的 ip 包, 使用命令：
# tcpdump ip host 210.27.48.1 and !210.27.48.2

M 如果想要获取主机 210.27.48.1 接收或发出的 telnet 包, 使用如下命令：
# tcpdump tcp port 23 host 210.27.48.1

第三种是协议的关键字, 主要包括 fddi, ip, arp, rarp, tcp, udp 等类型
除了这三种类型的关键字之外, 其他重要的关键字如下：gateway, broadcast, less, greater,
三种逻辑运算: 取非运算 'not', '!', 与运算 'and', '&&'; 或运算 'or', '||';

第二种是确定传输方向的关键字, 主要包括 src, dst, dst or src, dst and src,
如果只需要列出送到 80 端口的数据包, 用 dst port; 如果只希望看到返回 80 端口的数据包, 用 src port.
# tcpdump –i eth0 host hostname and dst port 80 目的端口是 80
或
# tcpdump –i eth0 host hostname and src port 80 源端口是 80 一般是提供 http 的服务的主机

如果条件很多的话, 要在条件之前加 and 或 or 或 not
# tcpdump -i eth0 host !211.161.223.70 and !211.161.223.71 and dst port 80

如果在 ethernet 使用混杂模式, 系统的日志将会记录
May  7 20:03:46 localhost kernel: eth0: Promiscuous mode enabled.
May  7 20:03:46 localhost kernel: device eth0 entered promiscuous mode
May  7 20:03:57 localhost kernel: device eth0 left promiscuous mode

tcpdump 对截获的数据并没有进行彻底解码, 数据包内的大部分内容是使用十六进制的形式直接打印输出的.
显然这不利于分析网络故障, 通常的解决办法是先使用带 -w 参数的 tcpdump 截获数据并保存到文件中, 然后再使用其他程序进行解码分析.
当然也应该定义过滤规则, 以避免捕获的数据包填满整个硬盘.
